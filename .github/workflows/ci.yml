name: CI Pipeline

on:
  push:
    branches:
      - 'main'
      - 'release/**'
      - 'feature/**'
  pull_request:
    branches:
      - 'main'
      - 'release/**'
      - 'feature/**'

jobs:
  validate-branch:
    name: Validate Branch Policy
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch logic
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
          if [[ "${{ github.event_name }}" == "push" ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"

            echo "üß™ Validating branch name: $BRANCH"

            if [[ "$BRANCH" != "main" && "$BRANCH" != feature/* && "$BRANCH" != release/* ]]; then
              echo "‚ùå Invalid branch name. Must start with 'main', 'feature/', or 'release/'."
              exit 1
            fi

          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            SOURCE="${{ github.head_ref }}"
            TARGET="${{ github.base_ref }}"

            echo "üß™ Validating PR from '$SOURCE' to '$TARGET'"

            if [[ "$TARGET" == "main" && "$SOURCE" != release/* ]]; then
              echo "‚ùå Only release branches can be merged into main"
              exit 1
            fi

            if [[ "$TARGET" == release/* && "$SOURCE" != feature/* ]]; then
              echo "‚ùå Only feature branches can be merged into release"
              exit 1
            fi

            if [[ "$TARGET" == feature/* && "$SOURCE" != feature/* ]]; then
              echo "‚ùå Only feature branches can be merged into other feature branches"
              exit 1
            fi
          else
            echo "‚ÑπÔ∏è Unknown event type: ${{ github.event_name }}"
          fi


  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: validate-branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build with Maven (skip tests)
        run: mvn clean install -DskipTests

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run tests if present
        run: |
          mvn test
