use cryptocurrency;

show tables;

CREATE TABLE USER (
    USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_NAME VARCHAR(255) NOT NULL,
    TIMESTAMP DATETIME DEFAULT CURRENT_TIMESTAMP,
    PUBLIC_KEY TEXT,
    PRIVATE_KEY TEXT
);

CREATE TABLE TRANSACTION (
    TRANSACTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    PAYER_ID INT,
    RECEIVER_ID INT,
    AMOUNT DECIMAL(9, 4) NOT NULL,
    MINER_REWARD DECIMAL(19, 4) DEFAULT 0,
    TIMESTAMP DATETIME DEFAULT CURRENT_TIMESTAMP,
    PAYER_SIGNATURE TEXT,

    CONSTRAINT FK_PAYER_ID FOREIGN KEY (PAYER_ID) REFERENCES USER(USER_ID),
    CONSTRAINT FK_RECEIVER_ID FOREIGN KEY (RECEIVER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE BLOCK (
    BLOCK_HASH BINARY(32) PRIMARY KEY,
    BLOCK_NUMBER INT AUTO_INCREMENT UNIQUE,
    PREVIOUS_HASH BINARY(32),
    NONCE INT NOT NULL,
    TIMESTAMP DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PREVIOUS_HASH) REFERENCES BLOCK(BLOCK_HASH)
);

CREATE TABLE BLOCK_TRANSACTION (
    BLOCK_ID BINARY(32),
    TRANSACTION_ID INT,
    
    PRIMARY KEY (BLOCK_ID, TRANSACTION_ID),
    
    FOREIGN KEY (BLOCK_ID) REFERENCES BLOCK(BLOCK_HASH),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION(TRANSACTION_ID)
);

CREATE TABLE WALLET (
    USER_ID INT PRIMARY KEY,
    WALLET_VALUE DECIMAL(18, 8) NOT NULL DEFAULT 0,

    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);